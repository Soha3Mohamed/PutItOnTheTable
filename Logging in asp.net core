
ุงูู **logging** ูู ุงููููุณุจุชุณ ุงููู ููุช ุนุงุฑูู ุฅููุง ูููุฉ ุฌุฏูุงุ ูุนุดุงู ูุฏู ูุถูุช ูุฃุฌู ูุฐุงูุฑุชูุง ูุญุฏ ูุง ุฃุฑูุฒ ูููุง ูููุณ. ุจูุงูู ููููู ุจูุฑุฃ ุนููุง ูุฃุทุจู ุนูููุ ูููุช ุฃุดุงุฑู ุงูุตูุฑุฉ ุงููุงููุฉ.

ุงูู logging ุจุจุณุงุทุฉ ูุนูู ุฅูู ุชูุซูู ูู ุงููู ุจูุญุตู ูู ุงูุฃุจูููุดู ุจุชุงุนู ูู ุฃูู ุงูู request ูุญุฏ ุงูู response. ุงููุฏู ุฅูู ุชูุงูู ุนูุฏู ุจูุงูุงุช ุชุฑุฌุน ููุง ููุง ูุญุตู bug ูุด ููููู ุฃู ููุง ุชุญุจ ุชุชุงุจุน ุฑุญูุฉ ุงูุฑููููุณุช ูู ุฃููู ูุขุฎุฑู.
ูููุฑ ูููุง ูุฅูู ุจุชุณุฌู ููุฏูู ูููุดูุงุฑ ููู ๐ฅ.

###  ูุณุชููุงุช ุงูู Logs

`Trace`, `Debug`, `Information`, `Warning`, `Error`, `Critical`

* `Trace` โ  Tiny Details.
* `Debug` โ  Developer Details.
* `Information` โ Normal Events.
* `Warning` โ Clear.
* `Error` โ There is a problem but the application is running.
* `Critical` โ The application may crash.

ููุง ุชุฎุชุงุฑ **MinimumLevel** ูุนููุ ุจุชุณุฌู ุงููุณุชูู ุฏู ููู ุงููุณุชููุงุช ุงูุฃุนูู ููู (ูู ุงูุดุฏุฉ).

###  ASP.NET Core ูุงูู ILogger

.NET Core ูููุง built-in logging ุนู ุทุฑูู `Microsoft.Extensions.Logging`ุ ููู ุฎูุงู `ILogger<T>` ุชูุฏุฑ ุชูุชุจ ููุฌุฒ ุจุงูุดูู ุฏู:


_logger.LogWarning("User with email {Email} already exists.", user.Email);


ุงูู `ILogger<T>` ุฏู ูุฌุฑุฏ abstractionุ ููุฑุง ุงูููุงููุณ ูููู ูุดุชุบู ุจุฃู provider ุชุฎุชุงุฑู.

###  ููู ุฃุณุชุฎุฏู Serilogุ

* **Sinks**: ุฃูุฏุฑ ุฃูุชุจ ุงูู logs ูู ุฃูุชุฑ ูู ููุงู (Console, File, Database, Remote Service ุฒู Seq ุฃู Kibana).
* **Structured Logging**: ุงูููุฌุฒ ุจุฏู ูุง ุชููู ูุต ุนุงุฏู ุชุจูู JSON โ ุชูุฏุฑ ุชุนูู queries & search ุนูู ุฃู property ุฒู `UserId`, `Duration`, ุฃู `Url`.
* **Enrichers**: ุชุถูู ุฃูุชููุงุชูู metadata ุฒู `RequestId`, `MachineName`, ููุนูููุงุช ุชุงููุฉ.
* **Destructuring**: ูู ุนููุช log ู object ูุงูู Serilog ุจูุญูููู JSON ููุธู ุจุฏู ูุง ูุทุจุน `ToString()`.

ูุซุงู ุจุณูุท:


Log.Logger = new LoggerConfiguration()
    .Enrich.FromLogContext()
    .WriteTo.Console(new Serilog.Formatting.Json.JsonFormatter())
    .WriteTo.File(new Serilog.Formatting.Json.JsonFormatter(), "logs/log.json", rollingInterval: RollingInterval.Day)
    .CreateLogger();


ุงููุซุงู ุฏู ุจูุฎูู ุงูู logs ุชุทูุน structured JSON ุณูุงุก ูู ุงูู console ุฃู ูู ูููุงุช ููููุฉ.

###  ููุงุญุธุงุช ูููุฉ

* ููู ูุชุณุฌููุด ุจูุงูุงุช ุญุณุงุณุฉ ุฒู Passwords ุฃู ูุนูููุงุช ุจุทุงูุงุช.
* ูุงุฒู ุชูุฑุฑ ูุญุฌู ุงูููุฌุฒ (Retention & Rolling files) ุนุดุงู ูุง ุชููุฃุด ุงูุณูุฑูุฑ.
* ูู production ููุถู ุชุนูู ุงูู config ูู `appsettings.json` ุนุดุงู ุฃู ุชุนุฏูู ูุชู ูู ุบูุฑ ุฅุนุงุฏุฉ build.

---
ุงููุฑุฉ ุงูุฌุงูุฉ ูุชููู ุนู seq ูุฏู UI Tool for Logs Management

